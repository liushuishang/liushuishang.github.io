<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>云翔天下</title>
  
  <subtitle>总要留下一些存在的痕迹罢</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.geetry.com/"/>
  <updated>2018-01-07T02:56:29.000Z</updated>
  <id>http://www.geetry.com/</id>
  
  <author>
    <name>流水殇</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>hexo集成hexo-qiniu-sync插件</title>
    <link href="http://www.geetry.com/2018/01/06/hexo-qiniu/"/>
    <id>http://www.geetry.com/2018/01/06/hexo-qiniu/</id>
    <published>2018-01-06T11:46:24.000Z</published>
    <updated>2018-01-07T02:56:29.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>  今天抽空在博客中集成hexo-qiniu-sync插件，主要目的是想把博客中用到的资源，比如图片、文件等放到七牛云存储，这样博客中只要通过url引用资源就行了，不仅方便而且安全。</p><blockquote><p>hexo-qiniu-sync是一个hexo插件， 可以让你在文档中入嵌存储在七牛上的图片、JS、CSS类型的静态文件。你可以不用手动上传文件到七牛，插件会自动帮你将本地目录的文件同步到七牛。</p></blockquote><p>  <a href="http://github.com/gyk001/hexo-qiniu-sync" target="_blank" rel="noopener">项目地址</a></p>  <a id="more"></a>  <p>  环境要求：</p><ol><li>已经安装好了nodejs和npm</li><li>已经初始化一个hexo博客目录</li><li><p>已经安装了git，并且关联到了github  </p><p>所有的以上要求可以<a href="https://www.jianshu.com/p/189fd945f38f" target="_blank" rel="noopener">参考这里</a>来完成。<br>在hexo初始化后的博客根目录执行如下语句来安装插件：</p><blockquote><p>npm install hexo-qiniu-sync –save</p></blockquote></li></ol><h1 id="开通七牛存储"><a href="#开通七牛存储" class="headerlink" title="开通七牛存储"></a>开通七牛存储</h1><p>  可以点击<a href="https://portal.qiniu.com/signup?code=3ll7lbuke1iky" target="_blank" rel="noopener">这里</a>来注册七牛存储，免费个人有10G的存储空间，个人博客应该足够使用了。<br>  注册成功后，进入”资源主页”添加一个”对象存储”来存放我们的博客资源。<br>  <img title="添加对象存储" alt="添加对象存储" src="http://p24hn6n30.bkt.clouddn.com/static/images/qiniu001.png-blogImg"><br>  存储空间名称写”yayblog”,选择华南地区、公开空间创建一个对象存储。点击刚创建的存储空间查看空间信息：<br>  <img title="对象存储详情" alt="对象存储详情" src="http://p24hn6n30.bkt.clouddn.com/static/images/qiniu002.png-blogImg"><br>  其中”内容管理”可以管理存储空间中的内容；”图片样式”可以为上传的图片做一些处理，比如剪裁、压缩、加水印等；七牛还给了一个测试域名，你也可以绑定自己的域名，但是需要中国特色的  “备案”，我使用的国外的域名，所以这里用得是这个测试域名。<br>  在”个人中心”可以查看刚自己的AccessKey/SecretKey，这个是七牛颁发的凭证，稍后配置的时候会使用。<br>  <img title="密钥查看" alt="密钥查看" src="http://p24hn6n30.bkt.clouddn.com/static/images/qiniu003.png-blogImg"><br>  至此，七牛存储已经准备就绪，我们重新回到我们的博客目录。  </p><h1 id="配置插件"><a href="#配置插件" class="headerlink" title="配置插件"></a>配置插件</h1><p>  打开根目录的<code>_config.yml</code>,添加如下配置：<br>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">#plugins:</span><br><span class="line">#- hexo-qiniu-sync</span><br><span class="line"></span><br><span class="line">#七牛云存储设置</span><br><span class="line">##offline       是否离线. 离线状态将使用本地地址渲染</span><br><span class="line">##sync          是否同步</span><br><span class="line">##bucket        空间名称.</span><br><span class="line">##access_key    上传密钥AccessKey</span><br><span class="line">##secret_key    上传密钥SecretKey</span><br><span class="line">##secret_file   秘钥文件路径，可以将上述两个属性配置到文件内，防止泄露，json格式。绝对路径相对路径均可</span><br><span class="line">##dirPrefix     上传的资源子目录前缀.如设置，需与urlPrefix同步</span><br><span class="line">##urlPrefix     外链前缀.</span><br><span class="line">##up_host      上传服务器路径,如选择华北区域的话配置为http://up-z1.qiniu.com</span><br><span class="line">##local_dir     本地目录.</span><br><span class="line">##update_exist  是否更新已经上传过的文件(仅文件大小不同或在上次上传后进行更新的才会重新上传)</span><br><span class="line">##image/js/css  子参数folder为不同静态资源种类的目录名称，一般不需要改动</span><br><span class="line">##image.extend  这是个特殊参数，用于生成缩略图或加水印等操作。具体请参考http://developer.qiniu.com/docs/v6/api/reference/fop/image/</span><br><span class="line">##              可使用基本图片处理、高级图片处理、图片水印处理这3个接口。例如 ?imageView2/2/w/500 即生成宽度最多500px的缩略图</span><br><span class="line">qiniu:</span><br><span class="line">  offline: false</span><br><span class="line">  sync: true</span><br><span class="line">  bucket: yayblog</span><br><span class="line">  secret_file: null</span><br><span class="line">  access_key: 七牛给的密钥</span><br><span class="line">  secret_key: 七牛给的密钥</span><br><span class="line">  dirPrefix: static</span><br><span class="line">  urlPrefix: http://前面七牛给的测试域名/static</span><br><span class="line">  up_host: http://upload.qiniu.com</span><br><span class="line">  local_dir: static</span><br><span class="line">  update_exist: true</span><br><span class="line">  image:</span><br><span class="line">    folder: images</span><br><span class="line">    extend: </span><br><span class="line">  js:</span><br><span class="line">    folder: js</span><br><span class="line">  css:</span><br><span class="line">    folder: css</span><br></pre></td></tr></table></figure></p><p>  这里要注意的是，参考作者的文档，会报错，正常的是不需要在这里写插件注册，也就是注释以下语句：</p><blockquote><p>#plugins:<br> #- hexo-qiniu-sync </p></blockquote><p>  这个插件的原理就是指定一个本地的目录<code>local_dir</code>和七牛对象存储的一个目录做映射，当发现本地目录中文件有变化的时候就自动上传到配置好的七牛的对象存储空间。<br>  根据作者的说法，这个本地<code>local_dir</code>是会自动创建的，但是不知道他有没有测试macos系统的情况。经过测试会出现权限不足的情况，所以需要执行命令把整个文件夹授权给当前用户，比如简单粗暴：</p><blockquote><p>chmod a+rwx .</p></blockquote><p>  万一真的不行，我还可以手动创建，但是需要注意新建的<code>static</code>文件夹的位置要和<code>source</code>平级，而不是<code>source</code>里面：<br>  <img title="static目录" alt="static目录" src="http://p24hn6n30.bkt.clouddn.com/static/images/qiniu004.png-blogImg"><br>  通过以上配置后，我们在static/images里面添加一张图片，然后执行命令：  </p><blockquote><p>hexo qiniu sync</p></blockquote><p>  就会在七牛网站对应的对象存储内容里面看到上传的图片啦<br>  <img title="上传的图片" alt="上传的图片" src="http://p24hn6n30.bkt.clouddn.com/static/images/qiniu005.png-blogImg"><br>  至此，我们已经完成了这个插件的配置，在markdown中使用图片：  </p><blockquote>  <img title="上传的图片" alt="上传的图片" src="http://p24hn6n30.bkt.clouddn.com/static/images/qiniu005.png-blogImg">  </blockquote><h1 id="图片处理"><a href="#图片处理" class="headerlink" title="图片处理"></a>图片处理</h1><p>  还记得我们前面的配置项里面有个<code>image : extend</code>的参数吗，这个是给图片处理预留的，也就是七牛可以自动对上传的图片做处理。  </p><blockquote><p>可以使用 基本图片处理（imageView2）、高级图片处理（imageMogr2）、图片水印处理（watermark） 这三个图片处理接口，多个接口内容之间用 | 间隔。<br>例如 ?imageView2/2/w/500 即生成宽度最多500px的缩略图。</p></blockquote><p>  以图片水印为例，我需要在我博客里面的图片上加上站点url的水印。首先我们在七牛的对象存储配置一个图片样式<code>blogImg</code>：<br>  <img title="新建图片样式" alt="新建图片样式" src="http://p24hn6n30.bkt.clouddn.com/static/images/qiniu006.png-blogImg"><br>  <img title="新建图片样式" alt="新建图片样式" src="http://p24hn6n30.bkt.clouddn.com/static/images/qiniu007.png-blogImg"><br>  完成后，回到博客根目录的配置文件修改配置项：  </p><blockquote><p>extend: -blogImg</p></blockquote><p>  这样当我们下载或引用图片的时候会自动加上了设置的水印。这是一个全局的配置，可能我们不是所有的图片都需要水印，这种情况我们可以在七牛创建多个图片样式，然后再引用图片的时候指定<code>extend</code>来指定生效的图片样式，标签中的设置会覆盖全局的设置，如：<br>  <img title="水印样式" alt="水印样式" src="http://p24hn6n30.bkt.clouddn.com/static/images/qiniu008.png">  </p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h1&gt;&lt;p&gt;  今天抽空在博客中集成hexo-qiniu-sync插件，主要目的是想把博客中用到的资源，比如图片、文件等放到七牛云存储，这样博客中只要通过url引用资源就行了，不仅方便而且安全。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;hexo-qiniu-sync是一个hexo插件， 可以让你在文档中入嵌存储在七牛上的图片、JS、CSS类型的静态文件。你可以不用手动上传文件到七牛，插件会自动帮你将本地目录的文件同步到七牛。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;  &lt;a href=&quot;http://github.com/gyk001/hexo-qiniu-sync&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;项目地址&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="博客搭建" scheme="http://www.geetry.com/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="hexo" scheme="http://www.geetry.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>开通个人博客</title>
    <link href="http://www.geetry.com/2018/01/06/first/"/>
    <id>http://www.geetry.com/2018/01/06/first/</id>
    <published>2018-01-06T09:33:28.000Z</published>
    <updated>2018-01-06T11:50:58.000Z</updated>
    
    <content type="html"><![CDATA[<p>&nbsp;&nbsp;&nbsp;&nbsp;一直断断续续在<a href="http://www.cnblogs.com/yuananyun" target="_blank" rel="noopener">博客园</a>写了将近七年的博客，期间也换了几次电脑了，所发的博文的原文也都丢了，此外，第三方博客平台终究不是那么自由，个人站点更适合作为个人名片。<br>&nbsp;&nbsp;&nbsp;&nbsp;后来github出现了，有想法把博文建立一个repository，这样不仅可以永久保留原文，而且还可以跟踪不同的版本，方便修改和完善。<br>&nbsp;&nbsp;&nbsp;&nbsp;再后来出现了hexo这个非常good的项目，可以直接把博文编译成静态html，然后很方便的部署到网页服务器（比如github的pages、nginx等）。<br>&nbsp;&nbsp;&nbsp;&nbsp;今天，作为程序员使用最多的编辑器肯定是Eclipse和IDEA之类的代码编辑器，然后我又有了用IDEA写博客的想法。写代码的时候突然有了灵感想写一篇博客，然后直接在IDEA里面new一个文件，拍拍拍，一气呵成，一键更新，快哉！<br>&nbsp;&nbsp;&nbsp;&nbsp;2018年来临了，今年给自己的规划是：多读书，多写博客，早睡早起身体好。所以花了几天搭建了这个博客站点，作为一个新的开始罢。我是一只奋斗中的眼镜兔，请记住我的头像：<br><img title="我的头像" alt="奋斗的眼镜兔" src="http://p24hn6n30.bkt.clouddn.com/static/images/头像.jpeg"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;一直断断续续在&lt;a href=&quot;http://www.cnblogs.com/yuananyun&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;博客园&lt;/a&gt;写了将近七年的博客，期间也换了几次电脑了，所发的博
      
    
    </summary>
    
      <category term="人生感悟" scheme="http://www.geetry.com/categories/%E4%BA%BA%E7%94%9F%E6%84%9F%E6%82%9F/"/>
    
    
      <category term="碎碎念" scheme="http://www.geetry.com/tags/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"/>
    
  </entry>
  
</feed>
